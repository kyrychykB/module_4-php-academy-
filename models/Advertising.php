<?php

namespace app\models;

use Yii;
use yii\web\UploadedFile;

/**
 * This is the model class for table "adversting".
 *
 * @property integer $id
 * @property string $title
 * @property double $price
 * @property string $site_url
 */
class Advertising extends \yii\db\ActiveRecord
{

    public $image;

    /**
     * @return array
     */
    public function behaviors()
    {
        return [
            'image' => [
                'class' => 'rico\yii2images\behaviors\ImageBehave',
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'advertising';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['price'], 'number'],
            [['status'], 'integer'],
            [['title', 'site_url'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'price' => 'Price',
            'site_url' => 'Site Url',
            'status' => 'Position'
        ];
    }

    /**
     * returns statuses of Announce
     * @return mixed
     */
    public static function getStatusList()
    {
        return ['left', 'right'];
    }

    /**
     * gets status name by 'status'
     * @return mixed
     */
    public function getStatusName()
    {
        $list = self::getStatusList();
        return $list[$this->status];
    }

    /**
     * uploads image
     * @return bool
     */
    public function uploadImage()
    {
        if($this->validate()){
            $path = 'uploads/store/' . $this->image->baseName . '.' . $this->image->extension;
            $this->image->saveAs($path);
            $this->attachImage($path, true);
            @unlink($path);
            return true;
        } else {
            return false;
        }
    }

    /**
     * removes main image
     * @return bool
     */
    public function deleteImage() {
        $image = $this->getImage();
        return $this->removeImage($image);
    }

    /**
     * @return bool
     */
    public function beforeDelete()
    {
        if (!parent::beforeDelete()) {
            return false;
        }
        return $this->deleteImage();
    }

    public function beforeSave($insert =false)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @param bool $insert
     * @param array $changedAttributes
     * @return bool
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes);


        $this->image = UploadedFile::getInstance($this, 'image');
        if($this->image) {
            $old_image = $this->getImage();
            if(!empty($old_image)) {
                $this->removeImage($old_image);
            }
            return $this->uploadImage();
        }
        return true;
    }
}
